[tox]
minversion = 1.6
envlist = py27,pep8
skipsdist = True

[testenv]
usedevelop = True
install_command = {toxinidir}/tools/tox_install.sh {opts} {packages}
setenv =
   VIRTUAL_ENV={envdir}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
whitelist_externals = bash
                      rm
commands = bash tools/pretty_tox.sh '{posargs}'
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY

[testenv:pep8]
commands = flake8
           doc8 doc/source devstack releasenotes/source vagrant rally-jobs

[testenv:venv]
commands = {posargs}

[testenv:cover]
commands = python setup.py test --coverage --coverage-package-name=networking_ovn --testr-args='{posargs}'

[testenv:docs]
commands =
  rm -rf doc/build
  doc8 doc/source devstack releasenotes/source vagrant rally-jobs
  sphinx-build -W -b html doc/source doc/build/html

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:genconfig]
commands =
    mkdir -p etc/networking-ovn
    oslo-config-generator --namespace networking_ovn --output-file etc/networking-ovn/networking-ovn.ini
whitelist_externals = mkdir

[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[doc8]
# File extensions to check
extensions = .rst

[flake8]
# E123, E125 skipped as they are invalid PEP-8.
# TODO(dougwig) -- uncomment this to test for remaining linkages
# N530 direct neutron imports not allowed

show-source = True
ignore = E123,E125,N530
builtins = _
exclude=.venv,.git,.tox,dist,doc,*openstack/common*,*lib/python*,*egg,build

[hacking]
import_exceptions = networking_ovn
local-check-factory = neutron_lib.hacking.checks.factory
